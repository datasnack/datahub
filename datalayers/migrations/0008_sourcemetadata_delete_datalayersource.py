# Generated by Django 5.1.5 on 2025-01-29 20:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('datalayers', '0007_alter_datalayer_database_unit_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='SourceMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the source. You can use <a href="https://www.markdownguide.org/cheat-sheet/" target="_blank">Markdown</a> for text formatting, including tables and footnotes.', null=True)),
                ('source_type', models.CharField(choices=[('data', 'Data source'), ('information', 'Further information')], default='data', help_text='Differentiate if this an actual data source of the Data Layer or further information.', max_length=20, verbose_name='Source type')),
                ('use_for_citation', models.BooleanField(default=True, help_text='Should this source be used in the aggregated citation information of this Data Layer?')),
                ('format', models.CharField(blank=True, help_text="File type of the source, preferable it's MIME type", max_length=255)),
                ('format_unit', models.CharField(blank=True, max_length=255)),
                ('spatial_coverage', models.CharField(blank=True, help_text='What extend of the world dose the source cover, i.e., global, country code, degrees', max_length=255)),
                ('spatial_resolution', models.CharField(blank=True, help_text='Resolution of the source, i.e., x km for raster data', max_length=255)),
                ('temporal_resolution', models.CharField(blank=True, help_text='Temporal resolution, like annually, monthly, cross sectional for single points.', max_length=255)),
                ('temporal_coverage_start', models.CharField(blank=True, help_text='First temporal point of the source, use ISO format like yyyy[-mm[-dd]].', max_length=255)),
                ('temporal_coverage_end', models.CharField(blank=True, help_text='Last temporal point of the source, use ISO format like yyyy[-mm[-dd]]. For continuously updated sources use ongoing', max_length=255)),
                ('source', models.TextField(blank=True)),
                ('source_link', models.TextField(blank=True)),
                ('language', models.CharField(blank=True, max_length=255)),
                ('license', models.CharField(blank=True, max_length=255)),
                ('date_published', models.TextField(blank=True)),
                ('date_last_accessed', models.DateField(blank=True, null=True)),
                ('citation_plain', models.TextField(blank=True)),
                ('citation_bibtex', models.TextField(blank=True)),
                ('pid_type', models.CharField(blank=True, choices=[('NONE', '<None>'), ('DOI', 'DOI'), ('ROR', 'ROR'), ('ORCID', 'ORCID')], default='DOI', max_length=255)),
                ('pid', models.CharField(blank=True, max_length=255)),
                ('datacite', models.JSONField(blank=True, null=True)),
                ('datacite_fetched_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('datalayer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='datalayers.datalayer')),
            ],
        ),
        migrations.DeleteModel(
            name='DatalayerSource',
        ),
    ]
